package cn.jbit;

import java.util.Scanner;

public class OrderingUtil {
	Scanner input = new Scanner(System.in);
	OrderingSet oSet = new OrderingSet();
	public void initial(){
		oSet.names[0] = "张晴";
		oSet.dishMegs[0] = "红烧带鱼 2份";
		oSet.times[0] = 12;
		oSet.addresses[0] = "天成路 207号";
		oSet.sumPrices[0] = 76.0;
		oSet.states[0] = 1;
		oSet.price[0] = 38;
		oSet.praiseNum[0] = 0;
		oSet.dishNames[0] = "红烧带鱼";
		
		oSet.names[1] = "张晴";
		oSet.dishMegs[1] = "鱼香肉丝 2份";
		oSet.times[1] = 18;
		oSet.addresses[1] = "天成路 207号";
		oSet.sumPrices[1] = 45.0;
		oSet.states[1] = 20;
		oSet.praiseNum[1] = 0;
		oSet.dishNames[1] = "红烧带鱼";
	}
	public void startMenu(){
		int num = -1;
		boolean isExit = false;
		System.out.println("\n欢迎使用“吃货联盟订餐系统”");
		do {		
			System.out.println("****************************");
			System.out.println("1、我要订餐");
			System.out.println("2、查看餐袋");
			System.out.println("3、签收订单");
			System.out.println("4、删除订单");
			System.out.println("5、我要点赞");
			System.out.println("6、退出系统");
			System.out.println("****************************");
			System.out.print("请选择:");
			int choose = input.nextInt();
			switch (choose) {
			case 1:
				if(!add()){
					System.out.println("对不起，您的餐袋已满");
				}
				System.out.println("***我要订餐***");
				add();
				break;
			case 2:
				System.out.println("***查看餐袋***");
				display();
				break;
			case 3:
				System.out.println("***签收订单***");
				sign();
				break;
			case 4:
				System.out.println("***删除订单***");				
				delete();
				break;
			case 5:
				System.out.println("***我要点赞***");
				praise();
				break;
			case 6:
				isExit = true;
				break;
			default:
				isExit = false;
				break;
			}
			if (!isExit) {
				System.out.print("输入0返回:");
				num = input.nextInt();
			} else {
				break;
			}
		} while (num == 0);
		System.out.println("谢谢使用，欢迎下次光临!");
	}
	public void display() {
		System.out.println("****查看餐袋****");
		System.out.println("序号\t订餐人\t餐品信息\t\t送餐时间\t送餐地址\t\t总金额\t订餐状态");
		for (int i = 0; i < oSet.names.length; i++) {
			// 数组里的数据不为空时显示
			if (oSet.names[i] != null) {
				// 状态
				String state = oSet.states[i] == 0 ? "已预定" : "已完成";
				System.out.println((i + 1) + "\t" + oSet.names[i] + "\t"
						+ oSet.dishMegs[i] + "\t\t" + oSet.times[i] + "点\t"
						+ oSet.addresses[i] + "\t" + oSet.sumPrices[i] + "元\t"
						+ state);
			}
		}
	}
	//订餐:向数组里加入数据
	public boolean add(){
		boolean isAdd=false;  //记录是否可以订餐
		//循环数组
		for(int j=0;j<oSet.names.length;j++){
			//为空的位置加入订餐信息
			if(oSet.names[j]==null){
				isAdd=true;
				System.out.println("输入 订餐人的名字：");
				String name=input.next();
				System.out.println("序号\t菜名\t单价\t点赞数");
				for(int i=0;i<oSet.dishNames.length;i++){
						String priaiseNum=oSet.praiseNum[i]>0?oSet.praiseNum[i]+"赞":"0";
						System.out.println((i+1)+"\t"+oSet.dishNames[i]+"\t"+oSet.price[i]+"元\t"+priaiseNum);
				}
				System.out.print("请选择您要点的菜品编号：");
				int chooseDish=input.nextInt();
				System.out.print("请选择您需要的份数：");
				int number=input.nextInt();
				//菜品+数量
				String dishMeg=oSet.dishNames[chooseDish-1]+number+"份";
				//餐品总金额
				double sumPrice=oSet.price[chooseDish-1]*number;
				//餐费满50元，免送餐费,小于50元，送餐费5元
				double charge=(sumPrice>=50)?0:5;
				
				System.out.print("请输入送餐的时间(送餐时间是10点到20点间整点送餐):");
				int time=input.nextInt();
				//循环输入时间
				while(time<10 || time>20){
					System.out.println("请的输入有误，请输入10-20间的整数");
					time=input.nextInt();	
				}
				System.out.print("请输入送餐地址：");
				String address=input.next();
				//显示订餐信息
				System.out.println("订餐成功!");
				System.out.println("您订的是："+dishMeg);
				System.out.println("送餐时间是："+time);
				System.out.println("餐费："+sumPrice+"元,送餐费"+charge+"元,总计:"+(sumPrice+charge)+"元");
			
				//向数组里增加数据
				oSet.names[j]=name;
				oSet.dishMegs[j]=dishMeg;
				oSet.times[j]=time;
				oSet.addresses[j]=address;
				oSet.sumPrices[j]=sumPrice;
				break;
			}
		}
		if(!isAdd){
			return false;
		}else{
			return true;
		}
}
public void sign(){
	boolean isSignFind = false;
	System.out.print("请选择要签收的订单序号:");
	int signOrderId = input.nextInt();
	for(int i=0;i<oSet.names.length;i++){			
		if(oSet.names[i]!=null && oSet.states[i]==0 && signOrderId==i+1){
			oSet.states[i] = 1;
			System.out.println("订单签收成功!");
			isSignFind = true;
		}else if(oSet.names[i]!=null && oSet.states[i]==1 && signOrderId==i+1){
			System.out.println("您选择的订单已完成签收，不能再次签收!");
			isSignFind = true;
		}
	}
	if(!isSignFind){
		System.out.println("您选择的订单不存在!");
	}

}
public void delete(){
	boolean isDelFind = false;
	System.out.print("请输入要删除的订单序号:");
	int delId = input.nextInt();
	for(int i=0;i<oSet.names.length;i++){
		if(oSet.names[i]!=null && oSet.states[i]==1 && delId==i+1){	
			isDelFind = true;
			for(int j=delId-1;j<oSet.names.length-1;j++){
				oSet.names[j] = oSet.names[j+1];
				oSet.dishMegs[j] = oSet.dishMegs[j+1];
				oSet.times[j] = oSet.times[j+1];
				oSet.addresses[j] = oSet.addresses[j+1];
				oSet.states[j] = oSet.states[j+1];
			}
			int nu = oSet.names.length-1;
			oSet.names[nu] = null;
			oSet.dishMegs[nu] = null;
			oSet.times[nu] = 0;
			oSet.addresses[nu] = null;
			oSet.states[nu] = 0;
			System.out.println("删除订单成功!");
			break;
		}else if(oSet.names[i]!=null && oSet.states[i]==0 && delId==i+1){
			System.out.println("您选择的订单未签收，不能删除!");
			isDelFind = true;
			break;
		}
	}
	
	if(!isDelFind){
		System.out.println("您要删除的订单不存在!");
	}
}
public void praise(){
	System.out.println("序号" + "\t" + "菜名" + "\t" + "单价" + "\t" + "点赞数");
	for (int i = 0; i < oSet.dishMegs.length; i++) {
		String price = oSet.price[i] + "元";
		String praiseNum;
		if (oSet.praiseNum[i] > 0 )
		    praiseNum = oSet.praiseNum[i] + "赞";
		else
		  	praiseNum = "";
		System.out.println((i + 1) + "\t" + oSet.dishMegs[i] + "\t"	+price+"\t"+ praiseNum);
	}
	int priaiseNum;
	do {
		System.out.print("请选择您要点赞的菜品序号:");
		priaiseNum = input.nextInt();
	}while (priaiseNum<=0 || priaiseNum > oSet.dishMegs.length);
	oSet.praiseNum[priaiseNum-1]++;
	System.out.println("点赞成功!");
	}
}
